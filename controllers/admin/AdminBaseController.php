<?php

namespace app\controllers\admin;
use yii;
use app\models\AuthAccess AS DpcAuthAccess;
use app\models\AuthMenu AS DpcAuthMenu;
use app\models\AuthRoleUser AS DpcAuthRoleUser;
use app\models\Operator AS DpcOperator;
use app\utils\Utils AS UtilsHelper;

class AdminBaseController extends \yii\web\Controller
{

    /**
     * @const integer 成功
     */
    const SUCCESS_CODE = 200;

    /**
     * @const integer 失败
     */
    const ERROR_CODE = 400;

    /**
     * @const integer 需要用户登录
     */
    const ERROR_NEED_AUTH = 401;

    /**
     * @const integer 需要第三方授权或登录
     */
    const ERROR_AUTH_THIRD = 407;

    /**
     * @property string 默认布局文件
     * @access public
     */
    public $layout = "@app/views/admin/layout/main";

    /**
     * @property integer 全局默认分页条数
     * @access public
     */
    public $pageSize = 20;


    /**
     * @var int 分页offset
     */
    protected $_offset = 20;

    /**
     * @const integer 超管角色ID
     */
    const SUPER_ADMIN_ID = 1;

    /**
     * @const string 加密密钥
     */
    const PASSWORD_PREFIX = 'DSY : 2020-08-24 17:07:00';

    /**
     * @const integer 登陆有效时长
     */
    const LOGIN_EXPIRE_TIME = 86400;

    /**
     * @property integer 管理员ID
     * @access protected
     */
    protected $op_user_id = 0;

    /**
     * @property string 管理员名称
     * @access protected
     */
    protected $op_user_name = '';

    /**
     * @property array 无需权限验证URL
     * @access protected
     */
    protected $no_auth_url = [
        '/admin/operator/login',
        '/admin/operator/loginout',
        '/admin/noaccess/index',
        '/admin/index/index',
        '/admin/upload/config',
        '/admin/upload/upload',
        '/admin/error/error',
        '/admin/error/notfound',
    ];

    /**
     * @property array 无需登陆验证URL
     * @access protected
     */
    protected $no_need_login_url = [
        '/admin/operator/login',
        '/admin/operator/loginout',
    ];


    /**
     * @var int
     */
    protected $_page = 1;

    /**
     * @var int
     */
    protected $_page_size = 10;

    public function beforeAction($action) {

        $controller = yii::$app->controller->id;
        $action = yii::$app->controller->action->id;
        if(!in_array('/' . $controller . '/' . $action, $this->no_need_login_url)) {
            $isLogin = $this->isLogin();
            if($isLogin === false && Yii::$app->request->isAjax) {
                $this->errorJson('请先登录', ['login_url' => '/admin/operator/login'], self::ERROR_NEED_AUTH);
            }
            if($isLogin === false) {
                $this->layout = false;
                return $this->redirect('/admin/operator/login');
            }
        }

        yii::$app->params['op_user_name'] = $this->op_user_name;
        yii::$app->params['op_user_id'] = $this->op_user_id;
        yii::$app->params['super_admin_id'] = self::SUPER_ADMIN_ID;


        // 处理分页
        $_page = (int) UtilsHelper::request('page');
        if (!empty($_page) && $_page > 0) {
            $this->_page = $_page;
        }
        // 处理分页数
        $_page_size = (int) UtilsHelper::request('pageSize');
        if (!empty($_page_size) && $_page_size > 0 && $_page_size <= 100) {
            $this->_page_size = $_page_size;
        }
        $this->_offset = ($this->_page - 1) * $this->_page_size;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * @var 登录校验
     * @access private
     * @return bool
     */
    private function isLogin() : bool {
        $cookies = Yii::$app->request->cookies;
        if (!$cookies->has(yii::$app->params['admin_cookie_name'])) {
            return false;
        }
        $dpc_tq = $cookies->get(yii::$app->params['admin_cookie_name']);
        $cookie_decrypt_data = Yii::$app->getSecurity()->decryptByPassword($dpc_tq, self::PASSWORD_PREFIX);
        parse_str($cookie_decrypt_data, $data);
        if(!isset($data['id']) || !isset($data['salt']) || !isset($data['last_logintime']) || !isset($data['last_loginip']) || !isset($data['expire'])) {
            Yii::$app->response->cookies->remove(yii::$app->params['admin_cookie_name']);
            return false;
        }

        if(time() >= $data['expire']) {
            Yii::$app->response->cookies->remove(yii::$app->params['admin_cookie_name']);
            return false;
        }

        $loginInfo = DpcOperator::findOne([
            'salt' => $data['salt'],
            'last_logintime' => $data['last_logintime'],
            'last_loginip' => $data['last_loginip'],
            'id' => (int)$data['id'],
        ]);

        if(empty($loginInfo)) {
            Yii::$app->response->cookies->remove(yii::$app->params['admin_cookie_name']);
            return false;
        }
        $this->op_user_name = $loginInfo['username'];
        $this->op_user_id = $loginInfo['id'];
        return true;
    }

    /**
     * 权限验证
     * @access protected
     * @return bool
     */
    protected function opUrlAuth() : bool {
        $controller = yii::$app->controller->id;
        $action = yii::$app->controller->action->id;
        $rule = strtolower('/' . $controller . '/' . $action);
        if(!in_array($rule, array_merge($this->no_need_login_url, $this->no_auth_url))) {
            return $this->opAuthMenu($rule);
        } else {
            return true;
        }
        return true;
    }

    /**
     * 权限验证
     * @access private
     * @param $url string 地址
     * @return bool
     */
    private function opAuthMenu($url) : bool {
        $rule = [];
        $roleIdTmp = DpcAuthRoleUser::findAll(['user_id' => $this->op_user_id]);
        $roleId = [];
        if(!empty($roleIdTmp)) {
            foreach ($roleIdTmp as $key => $value) {
                $roleId[] = $value['role_id'];
            }
        }

        if(in_array(self::SUPER_ADMIN_ID, $roleId)) {
            return true;
        }

        $roleAuth = [];
        $menu_table_name = DpcAuthMenu::tableName();
        $access_table_name = DpcAuthAccess::tableName();
        if(!empty($roleId)) {
            # 角色权限
            $roleAuth = DpcAuthMenu::find()->select($access_table_name . '.rule_name')
                ->innerJoin($access_table_name, $access_table_name . '.menu_id = ' . $menu_table_name . '.id')
                ->where([
                    '!=',  $menu_table_name . '.type', 1
                ])
                ->andWhere([
                    $access_table_name . '.type' => 'admin_url',
                    $access_table_name . '.rule_name' => $url
                ])
                ->andWhere([
                    'in', $access_table_name . ".role_id", $roleId
                ])
                ->asArray()->all();
            if(!empty($roleAuth)) {
                return true;
            }
        }
        #独立分配用户权限
        $accessAuth = DpcAuthMenu::find()->select($access_table_name . '.rule_name')
            ->innerJoin($access_table_name, $access_table_name . '.menu_id = ' . $menu_table_name . '.id')
            ->where([
                '!=',  $menu_table_name . '.type', 1
            ])
            ->andWhere([
                $access_table_name . '.type' => 'admin',
                $access_table_name . '.rule_name' => $url,
                $access_table_name . '.role_id' => $this->op_user_id
            ])
            ->asArray()->all();
        if(!empty($accessAuth)) {
            return true;
        }
        return false;
    }

    /**
     * @var 成功返回Json
     * @param string $msg
     * @param array $data
     * @param int $http_code
     * @return Json
     * @throws yii\base\ExitException
     */
    protected function successJson(string $msg = '操作成功', array $data = [], int $http_code = self::SUCCESS_CODE) : Json {
        yii::$app->response->format = yii\web\Response::FORMAT_JSON;
        Yii::$app->response->data = [
            'code' => $http_code,
            'msg' => $msg,
            'data' => $data,
        ];
        Yii::$app->response->statusCode = self::SUCCESS_CODE;
        Yii::$app->end();
    }


    /**
     * 错误返回Json
     * @param string $msg
     * @param array $data
     * @param int $http_code
     * @return Json
     * @throws yii\base\ExitException
     */
    protected function errorJson(string $msg = '操作失败，请重试', array $data = [], int $http_code = self::ERROR_CODE) : Json {
        yii::$app->response->format = yii\web\Response::FORMAT_JSON;
        Yii::$app->response->data = [
            'code' => $http_code,
            'msg' => $msg,
            'data' => $data,
        ];
        Yii::$app->response->statusCode = self::SUCCESS_CODE;
        Yii::$app->end();
    }

}